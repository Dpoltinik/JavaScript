1. В этом задании вам нужно вписать в указанное место код,
 который будет присваивать переменной "х" значение суммы переменных "a" и "b" в случае если  a > b
 или их произведение в остальных случаях.

function test(a, b) {
  let x;
  if (a > b) {
    x = a + b;
  } else {
    x = a * b;
  }
  return x;
}

function test(a, b) {
  let x = (a > b) ? a+b : a*b;
  return x;
}

2. В этом задании вам нужно вписать в указанное место код,
 который будет присваивать переменной "х" значение суммы переменных "a" и "b" - в случае если  a < b,
 разность "a" и "b" - в случае если  a > b, и их произведение  в остальных случаях.

function test(a, b) {
  let x;
  if (a < b) {
    x = a + b;
  } else if (a > b) {
    x = a - b;
  } else {
    x = a * b;
  }
  return x;
}

3. В этом задании вам нужно вписать в указанное место код,
  который будет присваивать переменной "х" название цифры, переданной в переменную "а".
  Цифра в переменную "а" будет передана случайным образом и может оказаться в диапазоне от 0 до 9 включительно,
  название должно быть написано по-русски с большой буквы - "Ноль", "Один", "Два" и т.д.

function test(n) {
  let x;
  switch (n){
    case 1:
      x = 'Один';
      break;
    case 2:
      x = 'Два';
      break;
    case 3:
      x = 'Три';
      break;
    case 4:
      x = 'Четыре';
      break;
    case 5:
      x = 'Пять';
      break;
    case 6:
      x = 'Шесть';
      break;
    case 7:
      x = 'Семь';
      break;
    case 8:
      x = 'Восемь';
      break;
    default:
      x = 'Девять';
  }
  return x;
}

4. В этом задании вам нужно вычислить факториал для числа, передаваемого в нашу функцию и вывести его с помощью команды return.
  На всякий случай напоминаем, что факториал числа a это произведение всех целых чисел от 1 до a,
  например, если а = 5, то факториал a будет равен 1 * 2 * 3 * 4 * 5

function test(n) {
  let x = 1;
  for (i = 1; i <= n; i += 1) {
    x *= i;
  }
  return x;
}
  
5. В этом задании вам нужно вычислить сумму всех четных чисел, встречающихся в ряду от 1 до числа (включительно),
  передаваемого в нашу функцию (переменная "а").

function test(n) {
  let x = 0;
  let y = 0;
  while (y <= n) {
    if (y%2 === 0) {
      x += y;
    }
    y += 1;
  }
  return x;
}

6. Дано натуральное число n. Напишите рекурсивную функцию, которая возвращает строку чисел от 1 до n, разделенных пробелом.

function test(n) {
  if (n === 1) return 1;
  return test(n-1) + ' ' + n;
}

7. В этом задании в нашу функцию testStr передаются две строки. Вам нужно вернуть из функции их суммарную длину.

function test(str1, str2) {
  let x;
  x = str1.length + str2.length;
  return x;
}

8. В этом задании в нашу функцию testStr первым параметром передается строка (переменная str), а вторым - число (переменная n).
  Вам нужно вернуть из функции символ строки, порядковый номер которого указан в переданном в функцию числе.

function test(str, n) {
  let x;
  x = str[n - 1];
  return x;
}

9. В этом задании в нашу функцию testStr передаются две строки.
  Вам нужно вернуть из функции строку, которая будет включать в себя обе этих строки,
  преобразовав в первой строке все буквы в заглавные, а во второй - в строчные.

function test(str1, str2) {
  let x;
  x = str1.toUpperCase() + str2.toLowerCase();
  return x;
}

10. В этом задании в нашу функцию testStr передаются две строки.
  Вам нужно вернуть индекс позиции, с которой начинается вхождение второй строки в первую.

function test(str1, str2) {
  let x = str1.indexOf(str2);
  return x;
}

11. В этом задании в нашу функцию testArray передаются два массива случайной длины заполненные случайными числами.
  Вам нужно сосчитать сумму всех элементов обоих массивов и возвратить ее из функции.

function test(ar1, ar2) {
  let x;
  let y = 0;
  x = [...ar1, ...ar2];
  for (elem in x) {
    y += x[elem];
  }
  return y;
}

12. В этом задании в нашу функцию testArray передаются две строки случайной длины и содержания.
  Вам нужно составить из символов этих строк один массив (каждый символ строки становится отдельным элементом массива),
  затем добавить первым элементом  массива текстовое значение "Иванов", и вернуть из функции все элементы в обратном порядке,
  преобразовав в строку.
  Обратите внимание, что в обратном порядке нужно переставить элементы внутри массива,
  а данные внутри элементов инвертировать не нужно!

function test(str1, str2) {
  let x;
  x = ['Иванов', ...str1.split(''), ...str2.split('')].reverse().join('');
  return x;
} 

13. В этом задании в нашу функцию testDateTime передаются две строки вида "03 November 2017 04:17".
  Вам нужно превратить строки в даты, сравнить их. Для той, что больше получить день недели и вернуть его из функции. 

function test(a,b) {
  let x = Date.parse(a);
  let y = Date.parse(b);
  let weekDay = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];
  let date = x > y ? new Date(x) : new Date(y);
  return weekDay[date.getDay()];
}




14. В этом задании в нашу функцию передается угол в градусах.
  Вам нужно вернуть из функции значение его синуса.
  Не забывайте, что тригонометрические функции в JavaScript принимают аргументы только в радианах!

function test(c) {
  let x;
  c = c * Math.PI / 180;
  x = Math.sin(c);
  return x;
}

15. А тут вам нужно вычислить и вернуть из функции площадь треугольника.
  Передаваемые в функцию аргументы "a" и "b" - это длины сторон, а "c" - это угол между ними в градусах.

function test(a,b,c) {
  let x;
  c = c * Math.PI / 180;
  x = 0.5 * a * b * Math.sin(c);
  return x;
}

16. В этом задании в нашу функцию передаются 4 числа.
  Вам необходимо вычислить результат деления большего из этих чисел на меньшее,
  и округлив до ближайшего меньшего целого вернуть из функции.

function test(a,b,c,d) {
  let x;
  x = Math.floor(Math.max(a,b,c,d) / Math.min(a,b,c,d));
  return x;
}

17. В этом задании вам необходимо выполнить возведение переменной a в степень b и возврат значения из функции.

function test(a,b) {
  let x = Math.pow(a,b);
  return x;
}

18. В этом задании в нашу функцию testRegExp первым параметром передается случайная строка(переменная s),
  а вторым - случайная подстрока(переменная sub_s), которую нужно использовать в качестве шаблона регулярного выражения.
  Вам нужно вернуть из функции строку, в которой будут перечислены через запятую все совпадения шаблона с первой строкой.

function test(str, sub) {
  let myPattern = new RegExp(sub,'g');
  return str.match(myPattern).join();
}